{
    "tests":
        [
            {
                "test name": "Argument, option and arguments map correctly",
                "file name": "testBasics",
                "args": "1 2.0 '?' -i:10 false one two three --testing",
                "expect": 0
            },
            {
                "test name": "Exitoption ignores need for other arguments",
                "file name": "testBasics",
                "args": "--help --testing",
                "expect": 0,
                "msg": "Usage: program [--testing|--int=<int>|--help] <int> <float> <char> <bool> <string>...\n"
            },
            {
                "test name": "Subcommand exitoption is specific",
                "file name": "testSubCommands",
                "args": "clone --help",
                "expect": 0,
                "msg": "clone help\n"
            },
            {
                "test name": "Subcommands map correctly",
                "file name": "testSubCommands",
                "args": "add -f foo bar baz --testing",
                "expect": 0
            },
            {
                "test name": "Subcommands with name and alias map correctly",
                "file name": "testSubCommands",
                "args": "a -f foo bar baz --testing",
                "expect": 0
            },
            {
                "test name": "Subcommands with an array of aliases map correctly",
                "file name": "testSubCommands",
                "args": "p --testing",
                "expect": 0,
                "msg": "push subcommand chosen\npushin ...\n"
            },
            {
                "test name": "Default values work",
                "file name": "testDefaultValues",
                "args": "create --silly=false --testing",
                "expect": 0
            },
            {
                "test name": "Spaced option before argument is correctly identified",
                "file name": "testSpace",
                "args": "--optional1 2 1 --testing",
                "expect": 0
            },
            {
                "test name": "Missing arguments echoes a message",
                "file name": "testBasics",
                "args": "1 2.0 '?' -i:10 false --testing",
                "expect": 1,
                "msg": "Missing command line arguments\nUsage: program [--testing|--int=<int>|--help] <int> <float> <char> <bool> <string>...\n"
            },
            {
                "test name": "Incorrect argument type echoes a message",
                "file name": "testErrors",
                "args": "1.0",
                "expect": 1,
                "msg": "Couldn't convert '1.0' to int\nUsage: <numbers: int...> [--fraction|-f: float] [--testing]\n"
            },
            {
                "test name": "Missing option echoes a message",
                "file name": "testErrors",
                "args": "1 --fraction",
                "expect": 1,
                "msg": "Missing value for option 'fraction'\nUsage: <numbers: int...> [--fraction|-f: float] [--testing]\n"
            },
            {
                "test name": "Incorrect option type echoes a message",
                "file name": "testErrors",
                "args": "1 --fraction abc",
                "expect": 1,
                "msg": "Couldn't convert 'abc' to float\nUsage: <numbers: int...> [--fraction|-f: float] [--testing]\n"
            }
        ]
}
